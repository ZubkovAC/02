[{"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\index.tsx":"1","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\TodolistsList.tsx":"2","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\api\\todolists-api.ts":"3","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\app\\store.ts":"4","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"6","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\app\\App.tsx":"7","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\todolists-reducer.ts":"8","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"9","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"10","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\components\\AddItemForm\\AddItemForm.tsx":"11","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\reportWebVitals.ts":"12","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\Login\\Login.tsx":"13","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\Login\\auth-reducer.ts":"14","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\app\\app-reducer.ts":"15","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\components\\EditableSpan\\EditableSpan.tsx":"16","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\api\\authAPI.ts":"17"},{"size":752,"mtime":1619876883006,"results":"18","hashOfConfig":"19"},{"size":4027,"mtime":1619822915852,"results":"20","hashOfConfig":"19"},{"size":2932,"mtime":1619824069627,"results":"21","hashOfConfig":"19"},{"size":843,"mtime":1619822324919,"results":"22","hashOfConfig":"19"},{"size":5514,"mtime":1619876882998,"results":"23","hashOfConfig":"19"},{"size":1773,"mtime":1596295538000,"results":"24","hashOfConfig":"19"},{"size":2581,"mtime":1619824197354,"results":"25","hashOfConfig":"19"},{"size":4059,"mtime":1619876882989,"results":"26","hashOfConfig":"19"},{"size":1042,"mtime":1619876388609,"results":"27","hashOfConfig":"19"},{"size":4034,"mtime":1619711799027,"results":"28","hashOfConfig":"19"},{"size":1524,"mtime":1619712499347,"results":"29","hashOfConfig":"19"},{"size":425,"mtime":1607869388000,"results":"30","hashOfConfig":"19"},{"size":3993,"mtime":1619877667982,"results":"31","hashOfConfig":"19"},{"size":2049,"mtime":1619877642103,"results":"32","hashOfConfig":"19"},{"size":2109,"mtime":1619823804247,"results":"33","hashOfConfig":"19"},{"size":952,"mtime":1594154724000,"results":"34","hashOfConfig":"19"},{"size":886,"mtime":1619877486390,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ow02f",{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\index.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\TodolistsList.tsx",["73","74","75","76","77","78","79","80"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n\r\n    if(!isLoggedIn){\r\n        return <Redirect to={'/login'} />\r\n    }\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n",["81","82"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\api\\todolists-api.ts",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\app\\store.ts",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\tasks-reducer.ts",["83"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["84","85","86"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\app\\App.tsx",["87"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\todolists-reducer.ts",["88"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["89","90","91","92","93","94"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\components\\AddItemForm\\AddItemForm.tsx",["95","96","97"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\reportWebVitals.ts",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\Login\\Login.tsx",["98"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\features\\Login\\auth-reducer.ts",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\app\\app-reducer.ts",["99"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\api\\authAPI.ts",[],{"ruleId":"100","severity":1,"message":"101","line":36,"column":8,"nodeType":"102","endLine":36,"endColumn":10,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":41,"column":8,"nodeType":"102","endLine":41,"endColumn":10,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"104","line":46,"column":8,"nodeType":"102","endLine":46,"endColumn":10,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"104","line":51,"column":8,"nodeType":"102","endLine":51,"endColumn":10,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"104","line":56,"column":8,"nodeType":"102","endLine":56,"endColumn":10,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"104","line":61,"column":8,"nodeType":"102","endLine":61,"endColumn":10,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"104","line":66,"column":8,"nodeType":"102","endLine":66,"endColumn":10,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"104","line":71,"column":8,"nodeType":"102","endLine":71,"endColumn":10,"suggestions":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":13,"column":94,"nodeType":"118","messageId":"119","endLine":13,"endColumn":96},{"ruleId":"100","severity":1,"message":"120","line":15,"column":97,"nodeType":"102","endLine":15,"endColumn":130,"suggestions":"121"},{"ruleId":"100","severity":1,"message":"120","line":20,"column":8,"nodeType":"102","endLine":20,"endColumn":41,"suggestions":"122"},{"ruleId":"100","severity":1,"message":"120","line":24,"column":8,"nodeType":"102","endLine":24,"endColumn":41,"suggestions":"123"},{"ruleId":"100","severity":1,"message":"124","line":35,"column":7,"nodeType":"102","endLine":35,"endColumn":9,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"117","line":10,"column":45,"nodeType":"118","messageId":"119","endLine":10,"endColumn":47},{"ruleId":"100","severity":1,"message":"126","line":36,"column":8,"nodeType":"102","endLine":36,"endColumn":10,"suggestions":"127"},{"ruleId":"100","severity":1,"message":"120","line":40,"column":8,"nodeType":"102","endLine":40,"endColumn":33,"suggestions":"128"},{"ruleId":"100","severity":1,"message":"120","line":47,"column":8,"nodeType":"102","endLine":47,"endColumn":45,"suggestions":"129"},{"ruleId":"100","severity":1,"message":"120","line":49,"column":86,"nodeType":"102","endLine":49,"endColumn":116,"suggestions":"130"},{"ruleId":"100","severity":1,"message":"120","line":50,"column":92,"nodeType":"102","endLine":50,"endColumn":122,"suggestions":"131"},{"ruleId":"100","severity":1,"message":"120","line":51,"column":98,"nodeType":"102","endLine":51,"endColumn":128,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":12},{"ruleId":"133","severity":1,"message":"137","line":2,"column":14,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},{"ruleId":"133","severity":1,"message":"138","line":2,"column":22,"nodeType":"135","messageId":"136","endLine":2,"endColumn":33},{"ruleId":"139","severity":1,"message":"140","line":62,"column":32,"nodeType":"141","endLine":62,"endColumn":49},{"ruleId":"133","severity":1,"message":"142","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["144"],["145"],["146"],["147"],["148"],["149"],["150"],"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["153"],["154"],["155"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["157"],["158"],["159"],["160"],["161"],["162"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Dispatch' is defined but never used.",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"165","fix":"168"},{"desc":"165","fix":"169"},{"desc":"165","fix":"170"},{"desc":"165","fix":"171"},{"desc":"165","fix":"172"},"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},{"desc":"173","fix":"176"},{"desc":"165","fix":"177"},{"desc":"178","fix":"179"},{"desc":"173","fix":"180"},{"desc":"173","fix":"181"},{"desc":"173","fix":"182"},{"desc":"173","fix":"183"},{"desc":"173","fix":"184"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch]",{"range":"187","text":"188"},{"range":"189","text":"188"},{"range":"190","text":"188"},{"range":"191","text":"188"},{"range":"192","text":"188"},{"range":"193","text":"188"},{"range":"194","text":"188"},"Update the dependencies array to be: [props]",{"range":"195","text":"196"},{"range":"197","text":"196"},{"range":"198","text":"196"},{"range":"199","text":"188"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"200","text":"201"},{"range":"202","text":"196"},{"range":"203","text":"196"},{"range":"204","text":"196"},{"range":"205","text":"196"},{"range":"206","text":"196"},[1325,1327],"[demo, dispatch, isLoggedIn]",[1496,1498],"[dispatch]",[1667,1669],[1872,1874],[2085,2087],[2286,2288],[2433,2435],[2612,2614],[765,798],"[props]",[1071,1104],[1261,1294],[1231,1233],[1474,1476],"[dispatch, props.id]",[1582,1607],[1820,1857],[1947,1977],[2071,2101],[2201,2231]]