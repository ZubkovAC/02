[{"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\state\\store.ts":"1","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\AddItemForm.tsx":"2","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\Tasks.tsx":"3","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\AddItemForm.stories.tsx":"4","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\EditableSpan.tsx":"5","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\Tasks.stories.tsx":"6","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\EditableSpan.stories.tsx":"7","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\Todolist.tsx":"8","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\AppWIthRedux.stories.tsx":"9","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\decorators\\ReduxStoreDecorator.tsx":"10","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\Header\\Header.stories.tsx":"11","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\Header\\Header.tsx":"12"},{"size":371,"mtime":1618226017552,"results":"13","hashOfConfig":"14"},{"size":1605,"mtime":1618227131295,"results":"15","hashOfConfig":"14"},{"size":1433,"mtime":1618226017547,"results":"16","hashOfConfig":"14"},{"size":571,"mtime":1618227131290,"results":"17","hashOfConfig":"14"},{"size":833,"mtime":1618227718592,"results":"18","hashOfConfig":"14"},{"size":738,"mtime":1618227549172,"results":"19","hashOfConfig":"14"},{"size":652,"mtime":1618227718588,"results":"20","hashOfConfig":"14"},{"size":3472,"mtime":1618226017548,"results":"21","hashOfConfig":"14"},{"size":530,"mtime":1618229938224,"results":"22","hashOfConfig":"14"},{"size":1155,"mtime":1618231310939,"results":"23","hashOfConfig":"14"},{"size":433,"mtime":1618226017557,"results":"24","hashOfConfig":"14"},{"size":1411,"mtime":1618227131302,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ow02f",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\state\\store.ts",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\AddItemForm.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\Tasks.tsx",["51"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\AddItemForm.stories.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\EditableSpan.tsx",["52"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\Tasks.stories.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\EditableSpan.stories.tsx",["53","54"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\Todolist.tsx",["55","56","57","58","59"],"import React, { useCallback} from 'react';\r\nimport {TaskType} from \"./App\";\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {Button, ButtonGroup} from \"@material-ui/core\";\r\nimport {DeleteSweep} from \"@material-ui/icons\";\r\nimport {Tasks} from \"./Tasks\";\r\n\r\nexport type FilterValuesType = {\r\n    filter: \"all\" | \"completed\" | \"active\"\r\n}\r\n\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: TaskType[]\r\n    filter: \"all\" | \"completed\" | \"active\"\r\n    removeTodolist: (todolistID: string) => void\r\n    addTasks: (newTitle: string, todolistID: string) => void\r\n    removeTask: (id: string, todolistID: string) => void\r\n    newTitleTodolist: (newTitle: string, todolistID: string) => void\r\n    newTitleTask: (title: string, todolistID: string, id: string) => void\r\n    changeTaskStatus: (taskID: string, newIsDone: boolean, todolistID: string) => void\r\n    changeFilter: (filter: \"all\" | \"completed\" | \"active\", todolistID: string) => void\r\n}\r\n\r\nexport const Todolist = React.memo((props: PropsType) => {\r\n\r\n    const addTasks = useCallback((title: string) => {\r\n        props.addTasks(title, props.id)\r\n    }, [props.addTasks, props.id])\r\n    const newTitleTodolist =  useCallback((newTitle: string) => {\r\n        props.newTitleTodolist(newTitle, props.id)\r\n    },[props.newTitleTodolist,props.id])\r\n\r\n\r\n    const buttonOnClickFilterAll = useCallback(() => props.changeFilter('all', props.id), [props.changeFilter,props.id])\r\n    const buttonOnClickFilterActive = useCallback(() => props.changeFilter('active', props.id), [props.changeFilter,props.id])\r\n    const buttonOnClickFilterCompleted = useCallback(() => props.changeFilter('completed', props.id), [props.changeFilter,props.id])\r\n\r\n    let tasksForTodolists = props.tasks\r\n\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolists = props.tasks.filter(t => t.isDone)\r\n    }\r\n    if (props.filter === 'active') {\r\n        tasksForTodolists = props.tasks.filter(t => !t.isDone)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <h3>\r\n            <EditableSpan onChange={newTitleTodolist} title={props.title}/>\r\n            <DeleteSweep color=\"disabled\" onClick={() => {props.removeTodolist(props.id)}}>x</DeleteSweep>\r\n        </h3>\r\n\r\n        <AddItemForm addTitle={addTasks}/>\r\n\r\n\r\n        <div style={{paddingTop: '20px'}}>\r\n            <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small primary button group\">\r\n                <Button variant={props.filter === 'all' ? 'contained' : 'text'} color=\"primary\"\r\n                        onClick={buttonOnClickFilterAll}>All</Button>\r\n                <Button variant={props.filter === 'active' ? 'contained' : 'text'} color=\"primary\"\r\n                        onClick={buttonOnClickFilterActive}>Active</Button>\r\n                <Button variant={props.filter === 'completed' ? 'contained' : 'text'} color=\"primary\"\r\n                        onClick={buttonOnClickFilterCompleted}>Completed</Button>\r\n            </ButtonGroup>\r\n        </div>\r\n\r\n        <ul>\r\n            {\r\n                tasksForTodolists.map(t => {\r\n                    return <Tasks\r\n                        key={t.id}\r\n                        task={t}\r\n                        todolistID={props.id}\r\n                       removeTask={props.removeTask}\r\n                        changeTaskStatus={props.changeTaskStatus} newTitleTask={props.newTitleTask}/>\r\n                })\r\n            }\r\n        </ul>\r\n\r\n    </div>\r\n})\r\n","C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\AppWIthRedux.stories.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\decorators\\ReduxStoreDecorator.tsx",["60","61"],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\Header\\Header.stories.tsx",[],"C:\\Users\\user\\Desktop\\kamasutra\\TodoList\\src\\stories\\Header\\Header.tsx",[],{"ruleId":"62","severity":1,"message":"63","line":23,"column":11,"nodeType":"64","endLine":23,"endColumn":63,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"63","line":16,"column":7,"nodeType":"64","endLine":16,"endColumn":14,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":15},{"ruleId":"67","severity":1,"message":"71","line":4,"column":17,"nodeType":"69","messageId":"70","endLine":4,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":32,"column":8,"nodeType":"64","endLine":32,"endColumn":34,"suggestions":"72"},{"ruleId":"62","severity":1,"message":"63","line":35,"column":7,"nodeType":"64","endLine":35,"endColumn":40,"suggestions":"73"},{"ruleId":"62","severity":1,"message":"63","line":38,"column":91,"nodeType":"64","endLine":38,"endColumn":120,"suggestions":"74"},{"ruleId":"62","severity":1,"message":"63","line":39,"column":97,"nodeType":"64","endLine":39,"endColumn":126,"suggestions":"75"},{"ruleId":"62","severity":1,"message":"63","line":40,"column":103,"nodeType":"64","endLine":40,"endColumn":132,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":19,"column":9,"nodeType":"79","messageId":"80","endLine":22,"endColumn":10,"fix":"81"},{"ruleId":"77","severity":1,"message":"82","line":23,"column":9,"nodeType":"79","messageId":"80","endLine":26,"endColumn":10,"fix":"83"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["84"],["85"],"@typescript-eslint/no-unused-vars","'Tasks' is defined but never used.","Identifier","unusedVar","'TasksPropsType' is defined but never used.",["86"],["87"],["88"],["89"],["90"],"no-useless-computed-key","Unnecessarily computed property [\"todolistId1\"] found.","Property","unnecessarilyComputedProperty",{"range":"91","text":"92"},"Unnecessarily computed property [\"todolistId2\"] found.",{"range":"93","text":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"95","fix":"99"},{"desc":"95","fix":"100"},{"desc":"95","fix":"101"},{"desc":"95","fix":"102"},{"desc":"95","fix":"103"},[633,648],"\"todolistId1\"",[782,797],"\"todolistId2\"","Update the dependencies array to be: [props]",{"range":"104","text":"105"},"Update the dependencies array to be: [props, title]",{"range":"106","text":"107"},{"range":"108","text":"105"},{"range":"109","text":"105"},{"range":"110","text":"105"},{"range":"111","text":"105"},{"range":"112","text":"105"},[936,988],"[props]",[492,499],"[props, title]",[1174,1200],[1328,1361],[1458,1487],[1586,1615],[1720,1749]]